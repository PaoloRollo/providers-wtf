import type { Chain } from '../types/chain.js';
import type { Formatters } from '../types/formatter.js';
export type AssertCurrentChainParameters = {
    chain?: Chain;
    currentChainId: number;
};
export declare function assertCurrentChain({ chain, currentChainId, }: AssertCurrentChainParameters): void;
export declare function defineChain<TChain extends Chain, TFormatters extends Formatters>(chain: TChain, config?: Pick<Chain<TFormatters>, 'formatters' | 'serializers'>): TChain & {
    formatters: TFormatters | undefined;
    serializers: import("../index.js").Serializers<TFormatters> | undefined;
};
export declare function getChainContractAddress({ blockNumber, chain, contract: name, }: {
    blockNumber?: bigint;
    chain: Chain;
    contract: string;
}): `0x${string}`;
//# sourceMappingURL=chain.d.ts.map