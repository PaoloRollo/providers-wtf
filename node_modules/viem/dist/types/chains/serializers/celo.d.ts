import type { Address } from 'abitype';
import type { FeeValuesEIP1559 } from '../../types/fee.js';
import type { AccessList, TransactionSerializable, TransactionSerializableBase } from '../../types/transaction.js';
import { type SerializeTransactionFn } from '../../utils/transaction/serializeTransaction.js';
export declare const serializeTransactionCelo: SerializeTransactionFn<TransactionSerializableCelo>;
export declare const serializersCelo: {
    readonly transaction: SerializeTransactionFn<TransactionSerializableCelo>;
};
export type TransactionSerializableCIP42<TQuantity = bigint, TIndex = number> = TransactionSerializableBase<TQuantity, TIndex> & FeeValuesEIP1559<TQuantity> & {
    accessList?: AccessList;
    gasPrice?: never;
    feeCurrency?: Address;
    gatewayFeeRecipient?: Address;
    gatewayFee?: TQuantity;
    chainId: number;
    type?: 'cip42';
};
export type TransactionSerializableCelo = TransactionSerializableCIP42 | TransactionSerializable;
export type SerializedCIP42TransactionReturnType = `0x7c${string}`;
//# sourceMappingURL=celo.d.ts.map